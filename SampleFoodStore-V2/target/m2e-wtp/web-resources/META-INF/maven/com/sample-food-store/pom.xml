<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com</groupId>
  <artifactId>sample-food-store</artifactId>
  <packaging>war</packaging>
  <version>0.0.1-SNAPSHOT</version>
  <name>food-store Maven Webapp</name>
  <url>http://maven.apache.org</url>

  <!-- 定义依赖库的版本变量 -->
  <properties>
    <commons-lang.version>2.6</commons-lang.version>
    <slf4j.version>1.7.6</slf4j.version>
    <!-- spring 版本号 -->
    <spring.version>4.3.3.RELEASE</spring.version>
	<shiro.version>1.3.2</shiro.version>    
  </properties>
  
  <!-- 依赖库定义 -->
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <version>${commons-lang.version}</version>
    </dependency>
    <!-- 防止 jsp 报错  -->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>3.1.0</version>
    </dependency>
    <!-- JSTL 定制标签库  -->
    <dependency>  
      <groupId>javax.servlet</groupId>  
      <artifactId>jstl</artifactId>  
      <version>1.2</version>  
      <type>jar</type>  
      <scope>compile</scope>  
    </dependency>      
    <!-- Jakarta Taglibs JSP定制标签库  -->
    <dependency>
      <groupId>taglibs</groupId>
      <artifactId>standard</artifactId>
      <version>1.1.2</version>
    </dependency>
    <!-- 各种集合类和集合工具类 -->
    <dependency>  
      <groupId>commons-collections</groupId>  
      <artifactId>commons-collections</artifactId>  
      <version>3.2.1</version>  
    </dependency>
    <!-- Spring Begin -->
    <dependency>  
      <groupId>org.springframework</groupId>  
      <artifactId>spring-aop</artifactId>  
      <version>${spring.version}</version>  
      <type>jar</type>  
      <scope>compile</scope>  
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context-support</artifactId>
      <version>${spring.version}</version>
    </dependency>  
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
      <version>${spring.version}</version>
    </dependency>  
    <dependency>  
      <groupId>org.springframework</groupId>  
      <artifactId>spring-expression</artifactId>  
      <version>${spring.version}</version>  
      <type>jar</type>  
      <scope>compile</scope>  
    </dependency>  
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
      <version>${spring.version}</version>
    </dependency>    
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
      <version>${spring.version}</version>
    </dependency>    
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-aspects</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-orm</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-oxm</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-messaging</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-tx</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jdbc</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jms</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-beans</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <version>${spring.version}</version>
    </dependency>
    
    <!-- Shiro dependencies: -->
    <dependency>
      <groupId>org.apache.shiro</groupId>
      <artifactId>shiro-core</artifactId>
      <version>${shiro.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.shiro</groupId>
      <artifactId>shiro-web</artifactId>
 	  <version>${shiro.version}</version>
    </dependency>
    <dependency>
	  <groupId>org.apache.shiro</groupId>
	  <artifactId>shiro-spring</artifactId>
	  <version>1.2.2</version>
	</dependency>
    <!-- Stormpath support for quick Realm deployment: -->
    <dependency>
      <groupId>com.stormpath.shiro</groupId>
      <artifactId>stormpath-shiro-core</artifactId>
      <version>0.7.0</version>
    </dependency>
    <dependency>
      <groupId>com.stormpath.sdk</groupId>
      <artifactId>stormpath-sdk-httpclient</artifactId>
      <version>1.0.4</version>
      <scope>runtime</scope>
     </dependency>
     <dependency>
       <groupId>mysql</groupId>
       <artifactId>mysql-connector-java</artifactId>
       <version>5.1.25</version>
     </dependency>
     <dependency>
        <groupId>net.sf.ehcache</groupId>
        <artifactId>ehcache</artifactId>
        <version>2.9.1</version>
    </dependency>
  </dependencies>    
  
  <build>
    <plugins>
	  <!-- maven 编译插件 -->
	  <plugin>
	    <groupId>org.apache.maven.plugins</groupId>
  	    <artifactId>maven-compiler-plugin</artifactId>
	    <version>3.5.1</version>
	    <configuration>
	  	  <!-- 源代码使用的开发版本 -->
	      <source>1.8</source>
	      <!-- 需要生成的目标class文件的编译版本 -->
	      <target>1.8</target>
	      <!-- 默认字符集编码 -->
	      <encoding>UTF-8</encoding>
	      <!-- 这下面的是可选项 -->
	      <meminitial>128m</meminitial>
	      <maxmem>512m</maxmem>
	      <fork>true</fork> <!-- fork is enable,用于明确表示编译版本配置的可用 --> 
	      <compilerVersion>1.3</compilerVersion>   
      	  <!-- 这个选项用来传递编译器自身不包含但是却支持的参数选项 -->
      	  <!-- <compilerArgument>-verbose -bootclasspath ${java.home}\lib\rt.jar</compilerArgument> -->
        </configuration>
	  </plugin>
    </plugins>
    
    <!-- 最终的项目名称 -->
    <finalName>SampleFoodStore-V2</finalName>
  </build>
</project>